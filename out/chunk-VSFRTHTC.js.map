{
  "version": 3,
  "sources": ["../../src/config.ts"],
  "sourcesContent": ["import { Chess } from \"chess.js\";\nimport { FromSchema, JSONSchema } from \"json-schema-to-ts\";\nimport { ZilchNamespace } from \"zilch-game-engine\";\n\n/**\n * User facing config schema\n */\ntype RawConfig = FromSchema<typeof configSchema>;\n\nexport interface Config {\n  fen: string;\n}\n\nexport type State = string;\n\ndeclare global {\n  const Zilch: ZilchNamespace<RawConfig, Config, State>;\n}\n\nexport const standardStartingPosition =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\n/**\n * Schema for the JSON users can input as part of\n * game setup.\n */\nconst configSchema = {\n  type: \"object\",\n  required: [\"pgn\", \"fen\"],\n  properties: {\n    pgn: {\n      description: \"Game in PGN format.\",\n      type: [\"string\", \"null\"],\n    },\n    fen: {\n      description: \"Game in FEN format.\",\n      type: [\"string\", \"null\"],\n    },\n  },\n} as const satisfies JSONSchema;\nZilch.configSchema = configSchema;\n\nZilch.configPresets = [\n  {\n    name: \"Standard\",\n    value:\n      `{\\n` +\n      `  \"pgn\": null,\\n` +\n      `  \"fen\": \"${standardStartingPosition}\"\\n` +\n      `}\\n`,\n  },\n];\n\nZilch.parseConfig = (rawConfig) => {\n  const chess = new Chess();\n  if (rawConfig.pgn && rawConfig.fen) {\n    throw new Error(\"Specify either PGN or FEN but not both.\");\n  }\n\n  if (rawConfig.pgn) {\n    chess.loadPgn(rawConfig.pgn);\n  } else if (rawConfig.fen) {\n    chess.load(rawConfig.fen);\n  }\n\n  return {\n    fen: chess.fen(),\n  };\n};\n\nZilch.serializeConfig = (config) => {\n  return config.fen;\n};\n\nZilch.summarizeConfig = (config) => {\n  if (\n    config.fen === \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n  ) {\n    return \"standard starting position\";\n  } else {\n    return \"custom starting position\";\n  }\n};\n"],
  "mappings": "wCAmBO,IAAMA,EACX,2DAMIC,EAAe,CACnB,KAAM,SACN,SAAU,CAAC,MAAO,KAAK,EACvB,WAAY,CACV,IAAK,CACH,YAAa,sBACb,KAAM,CAAC,SAAU,MAAM,CACzB,EACA,IAAK,CACH,YAAa,sBACb,KAAM,CAAC,SAAU,MAAM,CACzB,CACF,CACF,EACA,MAAM,aAAeA,EAErB,MAAM,cAAgB,CACpB,CACE,KAAM,WACN,MACE;AAAA;AAAA,YAEaD;AAAA;AAAA,CAEjB,CACF,EAEA,MAAM,YAAeE,GAAc,CACjC,IAAMC,EAAQ,IAAIC,EAClB,GAAIF,EAAU,KAAOA,EAAU,IAC7B,MAAM,IAAI,MAAM,yCAAyC,EAG3D,OAAIA,EAAU,IACZC,EAAM,QAAQD,EAAU,GAAG,EAClBA,EAAU,KACnBC,EAAM,KAAKD,EAAU,GAAG,EAGnB,CACL,IAAKC,EAAM,IAAI,CACjB,CACF,EAEA,MAAM,gBAAmBE,GAChBA,EAAO,IAGhB,MAAM,gBAAmBA,GAErBA,EAAO,MAAQ,2DAER,6BAEA",
  "names": ["standardStartingPosition", "configSchema", "rawConfig", "chess", "Chess", "config"]
}
